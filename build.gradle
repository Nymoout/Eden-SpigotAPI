plugins {
    id 'java'
    id 'maven-publish'
}

group = 'rip.diamond'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dir("./libs")
        dir("D:\\Minecraft Related\\Minecraft Plugins")
    }

    //Spigot and ImanitySpigot API
    maven {
        name "imanityLibraries"
        url "https://maven.imanity.dev/imanity-libraries"
    }
}

dependencies {
    implementation 'org.mongodb:mongodb-driver-sync:4.7.1' //MongoDB driver (This has to be included in the plugin jar file, so we use implementation)

    //Libraries from local
    compileOnly name: 'ImanitySpigot-KnockbackAPI' //ImanitySpigot API
    compileOnly name: 'ImanitySpigot-API-2022.08.1b2'
    compileOnly name: 'CarbonSpigot-v3.2.2'
    compileOnly name: 'FoxSpigot'

    //Libraries from others
    compileOnly 'org.imanity.imanityspigot:api:2022.08.1b2' //ImanitySpigot API

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'rip.diamond'
            artifactId = 'spigotapi'
            version = this.version
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}
